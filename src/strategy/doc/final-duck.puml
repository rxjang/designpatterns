@startuml

abstract class Duck {
  FlyBehavior flyBehavior
  QuackBehavior quackBehavior
  void swim()
  void display()
  void performQuack()
  void performply()
  void setFlyBehavior()
  void setQuackBehavior()
}

class MallardDuck {
  display()
}

class RedheadDuck {
  display()
}

class RubberDuck {
  display()
}

class DecoyDuck {
  display()
}

interface FlyBehavior {
   void fly()
}

class FlyWithWings {
    void fly()
}

class FlyNoWay {
    void fly()
}

interface QuackBehavior {
   void Quack()
}

class Quack {
   void Quack()
}

class Squeak {
   void Quack()
}

class MuteQuack {
   void Quack()
}

Duck -R-> FlyBehavior
Duck --> QuackBehavior

Duck <|-- MallardDuck
Duck <|-- RedheadDuck
Duck <|-- RubberDuck
Duck <|-- DecoyDuck

FlyBehavior <|.. FlyWithWings
FlyBehavior <|.. FlyNoWay

QuackBehavior <|.. Quack
QuackBehavior <|.. Squeak
QuackBehavior <|.. MuteQuack



@enduml

